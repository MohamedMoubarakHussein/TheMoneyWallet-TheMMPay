server:
    port: 8094
spring:
    application:
        name: notification-service
    data:
      mongodb:
        uri: mongodb://localhost:27017/notification_db
        auto-index-creation: true
    kafka:
        bootstrap-servers: localhost:9092
        consumer:
            auto-offset-reset: earliest
            group-id: notification-service
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            properties:
                spring:
                    json:
                        trusted:
                            packages: '*'
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            properties:
                spring:
                    json:
                        add:
                            type:
                                headers: false
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    web:
        resources:
            add-mappings: false




# Discovery service
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8888/eureka
      
mail:
  host: smtp.gmail.com
  port: 587
  username: ${EMAIL_USERNAME:your-email@gmail.com}
  password: ${EMAIL_PASSWORD:your-app-password}
  properties:
    mail:
      smtp:
        auth: true
        starttls:
        enable: true
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

notification:
  email:
    from: noreply@yourcompany.com
  websocket:
    endpoint: /ws
  retry:
    max-attempts: 3
    delay: 1000